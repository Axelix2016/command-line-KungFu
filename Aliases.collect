###################################
# edit your bashfile
# $ vim ~/.bashrc
# sudo git clone https://github.com/Axelix2016/command-line-KungFu.git
###################################
# make it work immediadetely
# source ~/.bashrc
# or just
# . ~/.bashrc
# to restart bash
###################################
# use echo
# echo "alias aliasname='command'" >> ~/.bash_aliases && tail -1 ~/.bash_aliases && source ~/.bash_aliases && echo 'added to bash'
#
###################################
# load aliases from .bash_aliases #
###################################
# if [ -f ~/.bash_aliases ]; then
#     . ~/.bash_aliases
# fi
#
###################################
# Aliases to add to your bash: ####
###################################
#
# This command looks for files that were added or updated within the last 24 hours.
# alias findRecent='find . -type f -mtime 0'
#
# Self explaining aliases:
# alias ver="cat /etc/lsb-release"
# alias ver2="cat /etc/redhat-release"
# alias ip="ip route get 8.8.8.8 | awk '{print $NF; exit}'"
# alias dir="ls -al"
# alias ll="ls -l"
# alias all="ls -al"
# alias groups="cut -d -f1 /etc/group |sort"
# alias users="cut -d -f1 /etc/passwd |sort"
# alias ax="chmod a+x"
# alias mount='mount |column -t'
# alias mem='top'
# alias h='history'
# alias cputemp='sensors | grep Core'
# alias j='jobs -l'
# alias runapache='sudo service apache2 restart'
# alias stopapache='sudo service apache2 stop'
# alias path='echo -e ${PATH//:/\\n}'
# alias update='sudo apt-get update && sudo apt-get dist-upgrade'
# alias edit='vim'
# alias chx='chmod 755'
# alias chr='chmod 644'
# alias ports='netstat -tulanp'
# alias lsh='ls -lhXG' # long listing, human-readable, sort by extension, do not show group info
# alias grep="grep -i"  # ignore case
# alias x="exit"
# alias dus='df -h'
# alias ..="cd .."
# alias ...='cd ../..'
# alias c="clear"
# alias umnt='umount /mnt/cdrom'  # cdrom / thumb drive.
#
## shortcut  for iptables and pass it via sudo#
# alias ipt='sudo /sbin/iptables'
#
## display all rules #
# alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
# alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
# alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
# alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
# alias firewall=iptlist
#
# Uncompress GZIP and BZIP archives:
# alias untarz='tar -xzf'
# alias untarj='tar -xjf'
## reboot / halt / poweroff
# alias reboot='sudo /sbin/reboot'
# alias poweroff='sudo /sbin/poweroff'
# alias halt='sudo /sbin/halt'
# alias shutdown='sudo /sbin/shutdown'
#
## also pass it via sudo so whoever is admin can reload it without calling you #
# alias nginxreload='sudo /usr/local/nginx/sbin/nginx -s reload'
# alias nginxtest='sudo /usr/local/nginx/sbin/nginx -t'
# alias lightyload='sudo /etc/init.d/lighttpd reload'
# alias lightytest='sudo /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf -t'
# alias httpdreload='sudo /usr/sbin/apachectl -k graceful'
# alias httpdtest='sudo /usr/sbin/apachectl -t && /usr/sbin/apachectl -t -D DUMP_VHOSTS'
#
## All of our servers eth1 is connected to the Internets via vlan / router etc  ##
# alias dnstop='dnstop -l 5  eth1'
# alias vnstat='vnstat -i eth1'
# alias iftop='iftop -i eth1'
# alias tcpdump='tcpdump -i eth1'
# alias ethtool='ethtool eth1'
#
# work on wlan0 by default #
# Only useful for laptop as all servers are without wireless interface
# alias iwconfig='iwconfig wlan0'
#
## select browser to test ##
# alias ff4='/opt/firefox4/firefox'
# alias ff13='/opt/firefox13/firefox'
# alias chrome='/opt/google/chrome/chrome'
# alias opera='/opt/opera/opera'
## default ff (firefox)
# alias ff=ff13
#
# default browser
# alias browser=chrome
#
## set some other defaults ##
# alias df='df -H'
# alias du='du -ch'
#
## pass options to free ##
# alias meminfo='free -m -l -t'
#
## get top process eating memory
# alias psmem='ps auxf | sort -nr -k 4'
# alias psmem10='ps auxf | sort -nr -k 4 | head -10'
# 
## get top process eating cpu ##
# alias pscpu='ps auxf | sort -nr -k 3'
# alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
# 
## Get server cpu info ##
# alias cpuinfo='lscpu'
# 
## older system use /proc/cpuinfo ##
##alias cpuinfo='less /proc/cpuinfo' ##
# 
## get GPU ram on desktop / laptop##
# alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'
#
# This will set a fancy prompt (PS1):
# export PS1="\[\033[01;33m\][$USER@$HOSTNAME]\[\033[0;00m\] \[\033[01;32m\]\w\\$\[\033[0;00m\] "
#
# Add a greeting, to be displayed whenever Bash runs interactively:
# echo "Welcome, $USER!"
# echo -e "Today is $(date)\nUptime: $(uptime)"
# echo "Your personal settings have been loaded successfully."
# echo "Part1-------------------------------------------------"
# Speicher-Platzfresser ermitteln:
# alias ducks='du -cks * |sort -rn |head -11'
#
# Find hidden processes (rootkit defense)
# alias hidden='ls -d /proc/* |grep [0-9]|wc -l; ps ax |wc -l'
# vergleicht die Anzahl laufender prozesse mit denen die ps ausgibt.
# ist die Anzahl bei mehrmaliger AusfÃ¼hrung stark unterschiedlich ist was faul.
#
# alias eth0='ifconfig eth0'
# alias eth1='ifconfig eth1'
# alias eth2='ifconfig eth2'
#
# alias grepall="find -type f -exec grep -q $1 {} \; -print"
#
# alias checkupdates='sudo apt-get update && sudo apt-get upgrade'
#
# ubuntu examples:
# sudo apt install bash-doc
# /usr/share/doc/bash-doc/examples
#
# echo "Part2-------------------------------------------------"
###################
# Appendix A      #
# Sharpen the saw #
###################
# To make this change persistent, add the lines to your ~/.bashrc file.
# My aliases:
# Runs apt-get always as root:
# alias apt-get='sudo apt-get'
# This gives live to the command ll:
# alias ll='ls -l'
# Get to home directory:
# alias home='cd ~'
#
# just for safety
# alias cp='cp -i'
# alias ln='ln -s'
# alias mv='mv -i'
# alias rm='rm -i'
#
# convenience redefinitions
# alias cd..='cd ..'
# alias cd-='cd -'
# alias dselect='dselect --expert'
# alias fg-='fg -'
# alias l='ls -l'
# alias ll='ls -la'
# alias lla='ls -la'
# alias ls='ls --color=auto'
# alias md=mkdir
# alias rd=rmdir
# alias su-='sudo su -'
# echo "Part3-------------------------------------------------"
# inventions
# alias fgg=jobs
# alias ghist='history|grep'
# alias lf='find -type f|sort'
# alias load='cat /proc/loadavg'
# alias meminfo='cat /proc/meminfo'
# logs
# alias mylogs='sudo tail -f /var/log/{apache2/*log,squid/access.log,otrs.log,exim*log,messages}'
# alias mylogs2='sudo tail -f /var/log/{syslog,daemon.log,user.log,router.log}'
# OTRS
# alias vio='vi /opt/otrs/Kernel/{Config/Defaults.pm,Config.pm}'
#
# Kalender
# alias kal='clear;echo -n "Heutiges Datum: ";date;echo;cal -3'
#
# switch off
# alias s &>/dev/null && unalias s
# alias p &>/dev/null && unalias p
#
# echo "Done-------------------------------------------------"
###########################
# Docker make easy commands
###########################
# apt-get install curl
# curl https://get.docker.com | bash
# curl https://get.docker.com | bash
# https://hub.docker.com
# https://docs.docker.com
# docker run hello-world
# systemctl status docker
# docker run --name my-mysql -e MYSQL_ROOT_PASSWORD=meinkennwort -d mysql
# docker ps
# docker run --name my-wordpress --link my-mysql:mysql -p :8080:80 -e
# sudo docker run -it --entrypoint /bin/bash <container_name>
# docker exec -it <mycontainer> bash
# docker exec -t -i container_name /bin/bash
# docker exec -it my-app-container bash
# update
# apt-get install openssh-server
# mkdir /var/run/sshd
# chmod 0755 /var/run/sshd
# /usr/sbin/sshd
# useradd --create-home --shell /bin/bash --groups sudo username ## includes 'sudo'
# passwd username ## Enter a password
# apt-get install x11-apps ## X11 demo applications (optional)
# ifconfig | awk '/inet addr/{print substr($2,6)}' ## Display IP address (optional)
## Now you can even run graphical applications (if they are installed in the container) using X11 forwarding to the SSH client:
# ssh -X username@IPADDRESS
# xeyes ## run an X11 demo app in the client
# wget https://github.com/mastix/docker-entwickler-webseite/archive/master.zip
# wget http://github.com/ziyaddin/xampp/archive/master.zip
# curl https://github.com/ziyaddin/xampp/archive/master.zip -L -o MyFilename.zip
# curl -L http://github.com/ziyaddin/xampp/archive/master.zip -o xampp.zip
# Curl -L https://github.com/mastix/docker-entwickler-webseite/archive/master.zip -o mywebsite.zip
# sudo apt-get install docker-compose
# docker-compose -v
#####
#eof#
#####
