#############################################################################
# Instructions:                                                             #
#               remove the # at the first row if you want to use a command  #
#               follow the Instructions below to activate it                #
#############################################################################
#
###################################
# edit your personal bashfile #(for the logged in account -whoami) #the same can be done for root
# vim ~/.bashrc
# sudo git clone https://github.com/Axelix2016/command-line-KungFu.git #to get the files from git to your local directory
###################################
# make it work immediadetely:
###################################
alias basher=". ~/.bashrc"
# to restart bash
###################################
# use echo to add aliases
###################################
# echo "alias aliasname='command'" >> ~/.bash_aliases && tail -1 ~/.bash_aliases && source ~/.bash_aliases && echo 'added to bash'
#
############################################################################
# load aliases from .bash_aliases (put this sequence in your .bashrc file) #
# you can also uses your own file e.g. ".Aliases.collect"                  #
############################################################################
# if [ -f ~/.bash_aliases ]; then
#     . ~/.bash_aliases
# fi
#
###################################
# Aliases to add to your bash: ####
###################################
######### newest ##################

###################################################################################
# This command looks for files that were added or updated within the last 24 hours.
# alias findRecent='find . -type f -mtime 0'
###################################################################################
##########################
# Self explaining aliases:
##########################
# alias ver="cat /etc/lsb-release" #to show the installed version of your ubuntu linux
# alias ver2="cat /etc/redhat-release" #to show the installed version of your redhat linux
# alias ip="ip route get 8.8.8.8 | awk '{print $NF; exit}'" #to show your ip adress
###########################################################################################
# aliases to ease your admin work:
###########################################################################################
 alias dir="ls -al"
 alias ll="ls -l"
 alias all="ls -al"
 alias groups="cut -d: -f1 /etc/group |sort"
 alias users="cut -d: -f1 /etc/passwd |sort"
# alias ax="chmod a+x"
# alias mount='mount |column -t'
# alias mem='top'
# alias h='history'
# alias cputemp='sensors | grep Core'
# alias j='jobs -l'
# alias runapache='sudo service apache2 restart'
# alias stopapache='sudo service apache2 stop'
# alias path='echo -e ${PATH//:/\\n}'
# alias update='sudo apt-get update && sudo apt-get dist-upgrade'
# alias edit='vim'
# alias chx='chmod 755'
# alias chr='chmod 644'
# alias ports='netstat -tulanp'
 alias lsh="ls -lhXG" # long listing, human-readable, sort by extension, do not show group info
# alias grep="grep -i"  # ignore case
 alias x="exit"
 alias dus="df -h"
 alias ..="cd .."
 alias ...="cd ../.."
 alias c="clear"
# alias umnt='umount /mnt/cdrom'  # cdrom / thumb drive.
###############################################
## shortcut  for iptables and pass it via sudo#
# alias ipt='sudo /sbin/iptables'
######################
## display all rules #
# alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
# alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
# alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
# alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
# alias firewall=iptlist
####################################
# Uncompress GZIP and BZIP archives:
# alias untarz='tar -xzf'
# alias untarj='tar -xjf'
#
## reboot / halt / poweroff
# alias reboot='sudo /sbin/reboot'
# alias poweroff='sudo /sbin/poweroff'
# alias halt='sudo /sbin/halt'
# alias shutdown='sudo /sbin/shutdown'
################################################################################
# some nginx helpers:
################################################################################
## also pass it via sudo so whoever is admin can reload it without calling you #
################################################################################
# alias nginxreload='sudo /usr/local/nginx/sbin/nginx -s reload'
# alias nginxtest='sudo /usr/local/nginx/sbin/nginx -t'
# alias lightyload='sudo /etc/init.d/lighttpd reload'
# alias lightytest='sudo /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf -t'
# alias httpdreload='sudo /usr/sbin/apachectl -k graceful'
# alias httpdtest='sudo /usr/sbin/apachectl -t && /usr/sbin/apachectl -t -D DUMP_VHOSTS'
########################################################################################
#
########################################################################################
## All of our servers eth1 is connected to the Internets via vlan / router etc  ##
# alias dnstop='dnstop -l 5  eth1'
# alias vnstat='vnstat -i eth1'
# alias iftop='iftop -i eth1'
# alias tcpdump='tcpdump -i eth1'
# alias ethtool='ethtool eth1'
########################################################################################
############################
# work on wlan0 by default #
########################################################################
# Only useful for laptop as all servers are without wireless interface #
########################################################################
# alias iwconfig='iwconfig wlan0'
#
############################
## select browser to test ##
############################
# alias ff4='/opt/firefox4/firefox'
# alias ff13='/opt/firefox13/firefox'
# alias chrome='/opt/google/chrome/chrome'
# alias opera='/opt/opera/opera'
## default ff (firefox)
# alias ff=ff13
#
# default browser
# alias browser=chrome
#############################
## set some other defaults ##
#############################
 alias df="df -H"
 alias du="du -ch"
##########################
## pass options to free ##
# alias meminfo='free -m -l -t'
################################
## get top process eating memory
################################
# alias psmem='ps auxf | sort -nr -k 4'
# alias psmem10='ps auxf | sort -nr -k 4 | head -10'
# ##############################
## get top process eating cpu ##
################################
# alias pscpu='ps auxf | sort -nr -k 3'
# alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
# #######################
## Get server cpu info ##
#########################
# alias cpuinfo='lscpu'
#################################### 
## older system use /proc/cpuinfo ##
####################################
# alias cpuinfo='less /proc/cpuinfo'
# ##################################
## get GPU ram on desktop / laptop##
####################################
# alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'
#####################################
# This will set a fancy prompt (PS1):
#####################################
 export PS1="\[\033[01;33m\][$USER@$HOSTNAME]\[\033[0;00m\] \[\033[01;32m\]\w\\$\[\033[0;00m\] "
###################################################################
# Add a greeting, to be displayed whenever Bash runs interactively:
echo "Welcome, $USER!"
echo -e "Today is $(date)\nUptime: $(uptime)"
echo "Your personal settings have been loaded successfully."
echo "Part1-----"
###################################################################
##################################
# Speicher-Platzfresser ermitteln:
##################################
 alias ducks="du -cks * |sort -rn |head -11"
#
#########################################
# Find hidden processes (rootkit defense)
#########################################
# alias hidden='ls -d /proc/* |grep [0-9]|wc -l; ps ax |wc -l'
# vergleicht die Anzahl laufender prozesse mit denen die ps ausgibt.
# ist die Anzahl bei mehrmaliger Ausf√ºhrung stark unterschiedlich ist was faul.
#
############################################
# get interface config for each adapter ethx
############################################
# alias eth0='ifconfig eth0'
# alias eth1='ifconfig eth1'
# alias eth2='ifconfig eth2'
############################################
# grepall to try it out:
################
# alias grepall="find -type f -exec grep -q $1 {} \; -print"
#
##################################################################
# check & install updates and upgrades for your system
##################################################################
# alias checkupdates='sudo apt-get update && sudo apt-get upgrade'
#
################################################
# here you can find some useful ubuntu examples:
################################################
# sudo apt install bash-doc
# /usr/share/doc/bash-doc/examples
#
################################################################
 echo "-------------Part2---"
################################################################
###################
# Appendix A      #
# Sharpen the saw #
###################
# To make this change persistent, add the lines to your ~/.bashrc file.
# My aliases:
# Runs apt-get always as root:
# alias apt-get='sudo apt-get'
# This gives live to the command ll:
# alias ll='ls -l'
# Get to home directory:
# alias home='cd ~'
#
# just for safety
# alias cp='cp -i'
# alias ln='ln -s'
# alias mv='mv -i'
# alias rm='rm -i'
#
# convenience redefinitions
# alias cd..='cd ..'
# alias cd-='cd -'
# alias dselect='dselect --expert'
# alias fg-='fg -'
# alias l='ls -l'
# alias ll='ls -la'
# alias lla='ls -la'
# alias ls='ls --color=auto'
# alias md=mkdir
# alias rd=rmdir
# alias su-='sudo su -'
###############################################################
 echo "------------------------Part3---"
###############################################################
############
# inventions
############
# alias fgg=jobs
# alias ghist='history|grep'
# alias lf='find -type f|sort'
# alias load='cat /proc/loadavg'
# alias meminfo='cat /proc/meminfo'
################################################################################################
# logs
################################################################################################
# alias mylogs='sudo tail -f /var/log/{apache2/*log,squid/access.log,otrs.log,exim*log,messages}'
# alias mylogs2='sudo tail -f /var/log/{syslog,daemon.log,user.log,router.log}'
################################################################
# OTRS
################################################################
# alias vio='vi /opt/otrs/Kernel/{Config/Defaults.pm,Config.pm}'
#
##########
# Kalender
##########
# alias kal='clear;echo -n "Heutiges Datum: ";date;echo;cal -3'
#
####################
# switch off aliases
####################
# alias s &>/dev/null && unalias s
# alias p &>/dev/null && unalias p
#
 echo "------------------------------------Done!"
##################################
# docker: basic commands / helpers
##################################
# sudo apt-get install curl
# curl https://get.docker.com | bash
# https://hub.docker.com
# https://docs.docker.com
# docker run hello-world
# docker run -it -d ubuntu #to run a ubuntu container detached
# docker exec -it <ubuntu-id> /bin/bash #to get in the container
# Ctrl-P + Ctrl Q #to get out of the container
# sudo docker version
# sudo usermod -aG docker <dockeruser>
# systemctl status docker
# docker run --name mysqlx -e MYSQL_ROOT_PASSWORD=<mypassword> -d mysql
# docker ps
# docker run --name my-wordpress --link my-mysql:mysql -p :8080:80 -e
# sudo docker run -it --entrypoint /bin/bash <container_name>
# docker exec -it <mycontainer> bash
# docker exec -t -i container_name /bin/bash
# docker exec -it my-app-container bash
# update
# apt-get install openssh-server
# mkdir /var/run/sshd
# chmod 0755 /var/run/sshd
# /usr/sbin/sshd
# useradd --create-home --shell /bin/bash --groups sudo username ## includes 'sudo'
# passwd username ## Enter a password
# apt-get install x11-apps ## X11 demo applications (optional)
# ifconfig | awk '/inet addr/{print substr($2,6)}' ## Display IP address (optional)
## Now you can even run graphical applications (if they are installed in the container) using X11 forwarding to the SSH client:
# ssh -X username@IPADDRESS
# xeyes ## run an X11 demo app in the client
# wget https://github.com/mastix/docker-entwickler-webseite/archive/master.zip
# wget http://github.com/ziyaddin/xampp/archive/master.zip
# curl https://github.com/ziyaddin/xampp/archive/master.zip -L -o MyFilename.zip
# curl -L http://github.com/ziyaddin/xampp/archive/master.zip -o xampp.zip
# Curl -L https://github.com/mastix/docker-entwickler-webseite/archive/master.zip -o mywebsite.zip
#########################################################
# docker: commands to be used with an alias:
#########################################################                      
# sudo apt install docker #to install docker, but using the docker install script from get.docker.com is better
# sudo apt install docker-compose #installs docker compose, the sucessor of fig
# docker-compose -v #to see docker-compose version
# alias drun="docker run -it -d --name nginx1 -p 80:80 nginx"
# alias doa="docker ps -a" #to show all containers running
# alias dim="docker images #to show all images"
# alias ds="docker stop" #<id> #to stop a container
# alias dstart="docker start" #<id> #to start the container <id>
# alias drm="docker rm" #<id> #to remove a container
# alias drmi="docker rmi" #<id> #to remove an image
# alias drun="docker run -it -d --name ubuntu-test1 ubuntu" #to start a container with ubuntu latest
# alias dex="docker exec -it ubuntu-test1 bash" #to get inside the container and start a bash
# alias drunb="docker run --name=nginx -d -v ~/nginxlogs:/var/log/nginx -p 5000:80 nginx" #to bindmount a volume
#########################################################
# localhost: 8834 # Nessus
#########################################################
# sudo apt-get install open-vm-tools
#########################################################
# nmap commands
#########################################################
Nmap Target Selection
#########################################################
# Scan a single IP	nmap 192.168.1.1
# Scan a host	nmap www.testhostname.com
# Scan a range of IPs	nmap 192.168.1.1-20
# Scan a subnet	nmap 192.168.1.0/24
# Scan targets from a text file	nmap -iL list-of-ips.txt
# These are all default scans, which will scan 1000 TCP ports. Host discovery will take place.
########################################################
# Nmap Port Selection
########################################################
# Scan a single Port	nmap -p 22 192.168.1.1
# Scan a range of ports	nmap -p 1-100 192.168.1.1
# Scan 100 most common ports (Fast)	nmap -F 192.168.1.1
# Scan all 65535 ports	nmap -p- 192.168.1.1
#######################################################
# Nmap Port Scan types
#######################################################
# Scan using TCP connect	nmap -sT 192.168.1.1
# Scan using TCP SYN scan (default)	nmap -sS 192.168.1.1
# Scan UDP ports	nmap -sU -p 123,161,162 192.168.1.1
# Scan selected ports - ignore discovery	nmap -Pn -F 192.168.1.1
# Privileged access is required to perform the default SYN scans. If privileges are insufficient a TCP connect scan will be used. A TCP connect requires a full TCP connection to be established and therefore is a slower scan. Ignoring discovery is often required as many firewalls or hosts will not respond to PING, so could be missed unless you select the -Pn parameter. Of course this can make scan times much longer as you could end up sending scan probes to hosts that are not there.
# Take a look at the Nmap Tutorial for a detailed look at the scan process.
######################################################
# Service and OS Detection
######################################################
# Detect OS and Services	nmap -A 192.168.1.1
# Standard service detection	nmap -sV 192.168.1.1
# More aggressive Service Detection	nmap -sV --version-intensity 5 192.168.1.1
# Lighter banner grabbing detection	nmap -sV --version-intensity 0 192.168.1.1
# Service and OS detection rely on different methods to determine the operating system or service running on a particular port. The more aggressive service detection is often helpful if there are services running on unusual ports. On the other hand the lighter version of the service will be much faster as it does not really attempt to detect the service simply grabbing the banner of the open service.
#####################################################
# Nmap Output Formats
#####################################################
# Save default output to file	nmap -oN outputfile.txt 192.168.1.1
# Save results as XML	nmap -oX outputfile.xml 192.168.1.1
# Save results in a format for grep	nmap -oG outputfile.txt 192.168.1.1
# Save in all formats	nmap -oA outputfile 192.168.1.1
# The default format could also be saved to a file using a simple file redirect command > file. Using the -oN option allows the results to be saved but also can be monitored in the terminal as the scan is under way. 
#####################################################
# Digging deeper with NSE Scripts
#####################################################
# Scan using default safe scripts	nmap -sV -sC 192.168.1.1
# Get help for a script	nmap --script-help=ssl-heartbleed
# Scan using a specific NSE script	nmap -sV -p 443 ‚Äìscript=ssl-heartbleed.nse 192.168.1.1
# Scan with a set of scripts	nmap -sV --script=smb* 192.168.1.1
####################################################
#A scan to search for DDOS reflection UDP services
####################################################
#Scan for UDP DDOS reflectors	nmap ‚ÄìsU ‚ÄìA ‚ÄìPN ‚Äìn ‚ÄìpU:19,53,123,161 ‚Äìscript=ntp-monlist,dns-recursion,snmp-sysdescr 192.168.1.0/24
####################################################
#HTTP Service Information
####################################################
#Gather page titles from HTTP services	nmap --script=http-title 192.168.1.0/24
#Get HTTP headers of web services	nmap --script=http-headers 192.168.1.0/24
#Find web apps from known paths	nmap --script=http-enum 192.168.1.0/24
####################################################
#Detect Heartbleed SSL Vulnerability
####################################################
#Heartbleed Testing	nmap -sV -p 443 --script=ssl-heartbleed 192.168.1.0/24
####################################################
#IP Address information
####################################################
#Find Information about IP address	nmap --script=asn-query,whois,ip-geolocation-maxmind 192.168.1.0/24
####################################################
#To get started this is a simple command for scanning your local network (class C or /24):
#nmap -sV -p 1-65535 192.168.1.1/24
####################################################
# EXAMPLES:
#           nmap -v -A scanme.nmap.org
#           nmap -v -sn 192.168.0.0/16 10.0.0.0/8
#           nmap -v -iR 10000 -Pn -p 80
####################################################
################################################################
# echo "Adding Docker Commands-------------------------------"
# echo "Done-------------------------------------------------"
################################################################
# BTFM                                                         #
################################################################
# echo "Adding BTFM Commands-------------------------------"
## useful linux commands
## system information
#uname -a
#uptime
#timedatectl
#mount
#echo $PATH
#
## user information
## view logged in users
#w
#
## show if a user has ever logged in remotely
#lastlog
#last
#
## view failed logins ##
# alias faillog = 'faillog -a'
#
## view local user accounts ##
# alias showpass = 'cat /etc/passwd'
# alias shadow = 'cat /etc/shadow'
#
## view local groups ##
# alias groups = 'cat /etc/group'
#
## view sudo access
# alias sudoers = 'cat /etc/sudoers'
#
## view accounts with UID0
# alias zeros = 'awk -F: '($3=="0"){print}' /etc/passwd'
# alias zero = 'egrep ':0+' /etc/passwd'
# 
## view root authorized SSH key authentications
#cat /root/.ssh/authorized_keys
#
## list of files opened by user
#lsof -u <USER_NAME>
#
## view root user bash history
#cat /root/.bash_history
#history >history-xx-xx-xxxx.txt
#
## view network interfaces
#ifconfig
#
## view network connections
#netstat -antup
#netstat -plantux
#
## view listening ports
#netstat -nap
#
## view routes
#route
#
## view arp tables
#arp -a
# 
## list of processes listening on ports
#lsof -i
# 
## view processes
#ps -aux
#
## list of load modules
#lsmod
#
## list of open files
#lsof
#
## list of open files using the network
#lsof -nPi | cut -f 1 -d " " | uniq | tail -n +2
#
## list of open files on specific process
#lsof -c <SERVICE_NAME>
#
## get all open files on specific process ID
#lsof -p <PID>
#
## list of unlinked processes running
#lsof +L1
#get path of suspicious process PID
#ls -al /proc/<PID>/exe
#
## save file for further malware binary analysis
#cp /proc/<PID>/exe >/<SUSPICIOUS FILE NAME TO SAVE>.elf
#
## monitor logs in real time
#less +F /var/log/messages
#
## list services
#chkconfig --list
#
## view pam.d files
#cat /etc/pam.d/common*
#
## list cron jobs
#crontab -l
#
## review unusual cron jobs
#cat /etc/crontab
#ls /etc/cron.*
#
## view root user command history
#cat /root/.*history
#
## view last logins
#last
#
## view disk space
#df -ah
#
## view directory listing for /etc/init.d
#ls -la /etc/init.d
#
## get more info for a file
#stat -x <FILE NAME>
#
#########################################################
# diff filel file2              ## compare files
# rm -rf dir                    ## force remove dir
# shred -f -u file              ## Overwrite/delete file
# touch -r ref file file        ## matches ref_file timestamp
# touch -t YYYY11t1DDHHSS file  ## Set file timestamp
# sudo fdisk -1                 ## List connected drives
# mount /dev/sda# /mnt/usbkey   ## mount USB key
# md5sum -t file                ## Compute md5 hash
# echo -n "str 11 I md5sum      ## Generate md5 hash
# shalsum file                  ## SHAl hash of file
# sort -u                       ## Sort/show unique lines
# grep -c ''str'' file          ## Count lines w/ ''str''
# tar cf file.tar files         ## Create .tar from files
# tar xf file.tar               ## Extract .tar
# tar czf file.tar.gz files     ## Create .tar.gz
# tar xzf file.tar.gz           ## Extract .tar.gz
# tar cjf file.tar.bz2 files    ## Create .tar.bz2
# tar xjf file.tar.bz2          ## Extract .tar.bz2
# gzip file                     ## Compress/rename file
# gzip -d file. gz              ## Decompress file.gz
# upx -9 -o out.exe orig.exe    ## UPX packs orig.exe
# zip -r zipname.zip \Directory\' ## Create zip
# dd skip=lOOO count=2000 bs=S if=file of=file ## Cut block 1K-3K from file
# split -b 9K \ file prefix     ## Split file into 9K chunks
# awk 'sub("$"."\r")' unix.txt win.txt ## Win compatible txt file
# find -i -name file -type '.pdf ## Find PDF files
# find I -perm -4000 -o -perm -2000 -exec ls -ldb {) \; ## Search for setuid files
# dos2unix file                 ## Convert to ~nix format
# file file                     ## Determine file type/info
# chattr (+/-)i file            ## Set/Unset immutable bit
#########################################################
# wget http:// url -0 url.txt -o /dev/null ##Grab url
# rdesktop ip                              ##Remote Desktop to ip
# scp /tmp/file user@x.x.x.x:/tmp/file     ##Put file
# scp user@ remoteip :/tmp/file /tmp/file  ##Get file
# useradd -m user                          ##Add user
# passwd user                              ##Change user password
# rmuser unarne                            ##Remove user
# script -a outfile                        ##Record shell : Ctrl-D stops
# apropos subject                          ##Find related command
# history                                  ##View users command history
# ! num                                    ##Executes line # in history
########################################################
# unset HISTFILE                           ##Disable history logging
# ssh user@ ip arecord - I aplay -         ##Record remote mic
# gee -o outfile myfile.c                  ##Compile C,C++
# init 6                                   ##Reboot (0 = shutdown)
#
# cat /etc/ 1 syslog 1 .conf 1 grep -v ''"#'' ##List of log files
#
# grep 'href=' file 1cut -d"/" -f3 I grep  ##Strip links in url.com
# url lsort -u
#
# dd if=/dev/urandom of= file bs=3145"28
# count=lOO                                ##make random 311B file
########################################################
# LINUX II COVER YOUR TRACKS II COMMANDS
# echo "" /var/log/auth.log ##Clear auth.log file
# echo '''' -/.bash history ##Clear current user bash history
# rrn -/.bash histor/ -rf ##Delete .bash_history file
# history -c ##Clear current session history
# export HISTFILESIZE=O ##Set historj max lines to 0
# export HISTSIZE=O ##Set histroy max commands to 0
# unset HISTFILE ##Disable history logging (need to logout to take effect)
# kill -9 $$ ##Kills current session
# ln /dev/null -/.bash_history -sf ##Permanently send all bash history commands to /dev/null
# echo "Adding Docker Commands------------------------------Done"
###########################################################################################

#################################################################################################################
#                                                eof                                                            #
#################################################################################################################
